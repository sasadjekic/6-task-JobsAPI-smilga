openapi: 3.0.0
info:
  title: Jobs API 6
  contact: {}
  version: '1.0'
servers:
- url: https://localhost:3000/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisteruserRequest'
              - example:
                  name: Saletest
                  email: djeka4@gmail.com
                  password: secret
            example:
              name: Saletest
              email: djeka4@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginuserRequest'
              - example:
                  password: secret
                  email: djeka3@gmail.com
            example:
              password: secret
              email: djeka3@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: netflix
                  position: back dev
            example:
              company: netflix
              position: back dev
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    get:
      tags:
      - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update single Job
      operationId: UpdatesingleJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatesingleJobRequest'
              - example:
                  company: randomaaa
                  position: ''
            example:
              company: randomaaa
              position: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete single job
      operationId: Deletesinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Saletest
        email: djeka4@gmail.com
        password: secret
    LoginuserRequest:
      title: LoginuserRequest
      required:
      - password
      - email
      type: object
      properties:
        password:
          type: string
        email:
          type: string
      example:
        password: secret
        email: djeka3@gmail.com
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: back dev
    UpdatesingleJobRequest:
      title: UpdatesingleJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: randomaaa
        position: ''
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''
